name: CheckMate - Build and Deploy to AKS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  ACR_NAME: ${{ secrets.ACR_NAME }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔍 Checkout code
      uses: actions/checkout@v3

    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 🐳 Build and push backend image
      run: |
        echo "Building backend..."
        cd backend
        az acr build \
          --registry $ACR_NAME \
          --image todo-backend:${{ github.sha }} \
          --image todo-backend:latest \
          --file Dockerfile \
          .

    - name: 🎨 Build and push frontend image
      run: |
        echo "Building frontend..."
        cd frontend
        az acr build \
          --registry $ACR_NAME \
          --image todo-frontend:${{ github.sha }} \
          --image todo-frontend:latest \
          --file Dockerfile \
          .

    - name: ☸️ Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}

    - name: 🚀 Deploy to AKS
      run: |
        echo "Deploying to Kubernetes..."
        kubectl apply -f k8s/deployment.yml
        
        echo "Restarting deployments to pull latest images..."
        kubectl rollout restart deployment/todo-backend
        kubectl rollout restart deployment/todo-frontend
        
        echo "Waiting for rollout to complete..."
        kubectl rollout status deployment/todo-backend --timeout=5m
        kubectl rollout status deployment/todo-frontend --timeout=5m

    - name: ✅ Verify deployment
      run: |
        echo "=========================================="
        echo "📦 Pods Status:"
        kubectl get pods
        echo ""
        echo "🌐 Services:"
        kubectl get services
        echo ""
        echo "🚀 Deployments:"
        kubectl get deployments
        echo "=========================================="

    - name: 🌐 Get Application URL
      run: |
        EXTERNAL_IP=$(kubectl get service frontend -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "=========================================="
        echo "✅ DEPLOYMENT SUCCESSFUL!"
        echo "🌐 Application URL: http://$EXTERNAL_IP"
        echo "=========================================="
