name: CheckMate - Build and Deploy to AKS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  ACR_NAME: ${{ secrets.ACR_NAME }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üîç Checkout code
      uses: actions/checkout@v3

    - name: üîê Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: üê≥ Build and push backend image
      run: |
        echo "Building backend..."
        cd backend
        docker build -t $ACR_NAME.azurecr.io/todo-backend:${{ github.sha }} .
        docker build -t $ACR_NAME.azurecr.io/todo-backend:latest .
        az acr login --name $ACR_NAME
        docker push $ACR_NAME.azurecr.io/todo-backend:${{ github.sha }}
        docker push $ACR_NAME.azurecr.io/todo-backend:latest

    - name: üé® Build and push frontend image
      run: |
        echo "Building frontend..."
        cd frontend
        docker build -t $ACR_NAME.azurecr.io/todo-frontend:${{ github.sha }} .
        docker build -t $ACR_NAME.azurecr.io/todo-frontend:latest .
        docker push $ACR_NAME.azurecr.io/todo-frontend:${{ github.sha }}
        docker push $ACR_NAME.azurecr.io/todo-frontend:latest

    - name: ‚ò∏Ô∏è Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}

    - name: üöÄ Deploy to AKS
      run: |
        kubectl apply -f k8s/deployment.yml
        kubectl rollout restart deployment/todo-backend
        kubectl rollout restart deployment/todo-frontend
        kubectl rollout status deployment/todo-backend --timeout=5m
        kubectl rollout status deployment/todo-frontend --timeout=5m

    - name: ‚úÖ Get Application URL
      run: |
        EXTERNAL_IP=$(kubectl get service frontend -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "üåê Application URL: http://$EXTERNAL_IP"
